---
# - name: add {{ ssm_package }} key
#   rpm_key:
#     state: present
#     key: "{{ ssm_package_gpg }}"

# - name: get the {{ ssm_package }}.rpm.sig remote file size
#   uri:
#     url: "{{ ssm_package_signature }}"
#     method: HEAD
#     validate_certs: false
#   register: url_pkg_sig

- name: get the {{ ssm_package }}.rpm remote file size
  uri:
    url: "{{ ssm_package_url }}"
    method: HEAD
    validate_certs: false
  register: url_pkg

# - name: check if {{ ssm_package }}.rpm.sig file exist before install
#   stat:
#     path: "/{{ temp_path }}/{{ ssm_package }}.rpm.sig"
#   register: pkg_sig_file

- name: check if {{ ssm_package }}.rpm file exist before install
  stat:
    path: "/{{ temp_path }}/{{ ssm_package }}.rpm"
  register: pkg_file

# - name: download {{ ssm_package }}.rpm.sig
#   get_url:
#     url: "{{ ssm_package_signature }}"
#     dest: "/{{ temp_path }}/{{ ssm_package }}.rpm.sig"
#   when: >
#     not pkg_sig_file.stat.exists or
#     url_pkg_sig.content_length != pkg_sig_file.stat.size
#   changed_when: false

- name: download {{ ssm_package }}.rpm
  get_url:
    url: "{{ ssm_package_url }}"
    dest: "/{{ temp_path }}/{{ ssm_package }}.rpm"
  when: >
    not pkg_file.stat.exists or
    url_pkg.content_length != pkg_file.stat.size
  changed_when: false

# - name: verify {{ ssm_package }} package signature
#   shell: gpg --verify {{ ssm_package }}.rpm.sig {{ ssm_package }}.rpm
#   register: verified_sig
#   failed_when: "'BAD' in verified_sig.stderr"
#   changed_when: false
#   args:
#     executable: /bin/bash
#     chdir: /{{ temp_path }}

- name: install {{ ssm_package }}.rpm
  yum:
    name: "/{{ temp_path }}/{{ ssm_package }}.rpm"
    state: latest

# - name: check if {{ ssm_package }}.rpm.sig file exist after install
#   stat:
#     path: "/{{ temp_path }}/{{ ssm_package }}.rpm.sig"
#   register: pkg_sig_file

- name: check if {{ ssm_package }}.rpm file exist after install
  stat:
    path: "/{{ temp_path }}/{{ ssm_package }}.rpm"
  register: pkg_file

# - name: remove downloaded {{ ssm_package }}.rpm.sig
#   file:
#     path: "/{{ temp_path }}/{{ ssm_package }}.rpm.sig"
#     state: absent
#   when: pkg_sig_file.stat.exists
#   changed_when: false

- name: remove downloaded {{ ssm_package }}.rpm
  file:
    path: "/{{ temp_path }}/{{ ssm_package }}.rpm"
    state: absent
  when: pkg_file.stat.exists
  changed_when: false
